name: SonarCloud

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código fuente
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Deshabilita clones superficiales para una mejor relevancia del análisis

      # Paso 2: Configurar Git para tratar el directorio como seguro
      - name: Configure Git safe.directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      # Paso 3: Instalar jq
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Paso 4: Cache de paquetes de SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Paso 5: Configurar Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'  # Especifica la versión de Flutter que incluye Dart 3.1.0

      # Paso 6: Instalar dependencias
      - name: Install dependencies
        run: flutter pub get

      # Paso 7: Analizar el código con Flutter
      - name: Analyze with Flutter
        run: flutter analyze

      # Paso 8: Configurar Java 17 usando actions/setup-java
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # Paso 9: Ejecutar SonarCloud usando la acción oficial
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          organization: 'isco-utb'  # Reemplaza con tu organización en SonarCloud
          projectKey: 'ISCOUTB_DH-MI-SUPERTIENDA'
          projectName: 'Nombre de tu Proyecto'  # Opcional
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Paso 10: Construir la aplicación Flutter
      # Puedes ajustar este paso según la plataforma que estés utilizando (apk, ios, web, etc.)
      - name: Build Flutter app
        run: flutter build apk --release  # Para Android
        # run: flutter build ios --release  # Para iOS (requiere runner macOS)
        # run: flutter build web --release  # Para Web
