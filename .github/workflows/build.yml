name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código fuente
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Deshabilita clones superficiales para una mejor relevancia del análisis

      # Paso 2: Configurar Git para tratar el directorio como seguro
      - name: Configure Git safe.directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      # Paso 3: Instalar jq
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Paso 4: Cache de paquetes de SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Paso 5: Configurar Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'  # Especifica la versión de Flutter que incluye Dart 3.1.0

      # Paso 6: Instalar dependencias
      - name: Install dependencies
        run: flutter pub get

      # Paso 7: Analizar el código con Flutter
      - name: Analyze with Flutter
        run: flutter analyze

      # Paso 8: Construir la aplicación Flutter
      # Puedes ajustar este paso según la plataforma que estés utilizando (apk, ios, web, etc.)
      - name: Build Flutter app
        run: flutter build apk --release  # Para Android
        # run: flutter build ios --release  # Para iOS (requiere runner macOS)
        # run: flutter build web --release  # Para Web

      # Paso 9: Configurar Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Puedes especificar otra distribución si lo prefieres

      # Paso 10: Verificar la versión de Java (Opcional)
      - name: Check Java version
        run: java -version

      # Paso 11: Descargar SonarScanner
      - name: Download SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner-cli-4.7.0.2747-linux.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH

      # Paso 12: Ejecutar SonarCloud Scan
      - name: Run SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necesario para PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -D"sonar.organization=isco-utb" \
            -D"sonar.projectKey=ISCOUTB_DH-MI-SUPERTIENDA" \
            -D"sonar.sources=." \
            -D"sonar.host.url=https://sonarcloud.io" \
            -D"sonar.login=${{ secrets.SONAR_TOKEN }}"
